BasisDirectory[fa1Test] = StringDrop[DirectoryName[$Input], -1]
fa1Test /: BasisSectors[fa1Test] := {js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0], js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
    0, 0, 0, 0, 0], js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0], js[fa1Test, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: CurrentState[fa1Test] := <|NewDsBasis -> True, 
   GenerateIBP -> True, AnalyzeSectors -> True, FindSymmetries -> False|>
fa1Test /: CutDs[fa1Test] := {1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}
fa1Test /: Definitions[fa1Test] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l1], Declare[l1, Vector]], Hold[VecQ[l3], Declare[l3, Vector]], 
   Hold[VecQ[a], Declare[a, Vector]], Hold[VecQ[b], Declare[b, Vector]], 
   Hold[VecQ[P], Declare[P, Vector]], Hold[VecQ[q], Declare[q, Vector]], 
   Hold[VecQ[Q], Declare[Q, Vector]], Hold[VecQ[v1], Declare[v1, Vector]], 
   Hold[VecQ[v2], Declare[v2, Vector]], 
   Hold[LiteRed`Private`ExpresionType[a] === LiteRed`Private`ExpresionType[
      a], Declare[a, LiteRed`Private`ExpresionType[a]]], 
   Hold[LiteRed`Private`ExpresionType[b] === LiteRed`Private`ExpresionType[
      b], Declare[b, LiteRed`Private`ExpresionType[b]]], 
   Hold[LiteRed`Private`ExpresionType[P] === LiteRed`Private`ExpresionType[
      P], Declare[P, LiteRed`Private`ExpresionType[P]]], 
   Hold[LiteRed`Private`ExpresionType[q] === LiteRed`Private`ExpresionType[
      q], Declare[q, LiteRed`Private`ExpresionType[q]]], 
   Hold[LiteRed`Private`ExpresionType[Q] === LiteRed`Private`ExpresionType[
      Q], Declare[Q, LiteRed`Private`ExpresionType[Q]]], 
   Hold[LiteRed`Private`ExpresionType[v1] === LiteRed`Private`ExpresionType[
      v1], Declare[v1, LiteRed`Private`ExpresionType[v1]]], 
   Hold[LiteRed`Private`ExpresionType[v2] === LiteRed`Private`ExpresionType[
      v2], Declare[v2, LiteRed`Private`ExpresionType[v2]]], 
   Hold[LiteRed`Private`ExpresionType[y1] === LiteRed`Private`ExpresionType[
      y1], Declare[y1, LiteRed`Private`ExpresionType[y1]]], 
   Hold[LiteRed`Private`ExpresionType[y2] === LiteRed`Private`ExpresionType[
      y2], Declare[y2, LiteRed`Private`ExpresionType[y2]]], 
   Hold[LiteRed`Private`ExpresionType[y3] === LiteRed`Private`ExpresionType[
      y3], Declare[y3, LiteRed`Private`ExpresionType[y3]]], 
   Hold[LiteRed`Private`ExpresionType[y4] === LiteRed`Private`ExpresionType[
      y4], Declare[y4, LiteRed`Private`ExpresionType[y4]]], 
   Hold[LiteRed`Private`ExpresionType[y5] === LiteRed`Private`ExpresionType[
      y5], Declare[y5, LiteRed`Private`ExpresionType[y5]]], 
   Hold[LiteRed`Private`ExpresionType[y6] === LiteRed`Private`ExpresionType[
      y6], Declare[y6, LiteRed`Private`ExpresionType[y6]]], 
   Hold[LiteRed`Private`ExpresionType[yb] === LiteRed`Private`ExpresionType[
      yb], Declare[yb, LiteRed`Private`ExpresionType[yb]]], 
   Hold[sp[a, a] === y2, sp[a, a] = y2], Hold[sp[b, b] === yb, 
    sp[b, b] = yb], Hold[sp[P, P] === 0, sp[P, P] = 0], 
   Hold[sp[q, q] === y3, sp[q, q] = y3], Hold[sp[Q, Q] === 0, sp[Q, Q] = 0], 
   Hold[sp[v1, v1] === 1, sp[v1, v1] = 1], Hold[sp[v2, v2] === 1, 
    sp[v2, v2] = 1], Hold[sp[a, b] === y6, sp[a, b] = y6], 
   Hold[sp[a, P] === 0, sp[a, P] = 0], Hold[sp[a, q] === y4, sp[a, q] = y4], 
   Hold[sp[a, Q] === 0, sp[a, Q] = 0], Hold[sp[a, v1] === 0, sp[a, v1] = 0], 
   Hold[sp[a, v2] === 0, sp[a, v2] = 0], Hold[sp[b, q] === y5, 
    sp[b, q] = y5], Hold[sp[b, v1] === 0, sp[b, v1] = 0], 
   Hold[sp[b, v2] === 0, sp[b, v2] = 0], Hold[sp[P, Q] === 0, sp[P, Q] = 0], 
   Hold[sp[P, v2] === 0, sp[P, v2] = 0], Hold[sp[q, v1] === 0, 
    sp[q, v1] = 0], Hold[sp[q, v2] === 0, sp[q, v2] = 0], 
   Hold[sp[Q, v2] === 0, sp[Q, v2] = 0], Hold[sp[v1, v2] === y1, 
    sp[v1, v2] = y1]}
fa1Test /: Ds[fa1Test] := {sp[l1, l1], sp[l3, l3], 
   sp[-l1 - l3 + q, -l1 - l3 + q], sp[l1, v2], sp[l3, v2], 
   sp[-l3 + q, -l3 + q], sp[l1, v1], sp[l3, v1], sp[a, l1], sp[a, l3], 
   sp[l1, q], sp[b, l1], sp[b, l3], sp[l1, P], sp[l3, Q], sp[l1, Q], 
   sp[l3, P]}
fa1Test /: DsBasisQ[fa1Test] := True
fa1Test /: EMs[fa1Test] := {a, b, P, q, Q, v1, v2}
fa1Test /: ExtMappedSectors[fa1Test] := {}
fa1Test /: ExtSectorsMappings[fa1Test] := {}
fa1Test /: IBP[fa1Test] := 
  {-(#3*j[fa1Test, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]) + (d - #14 - #16 - 2*#1 - #3 - #4 - 
       #7 - #9 - #11 - #12)*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13, #14, #15, #16, #17] + 
     #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17], 
    #6*j[fa1Test, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - #3*j[fa1Test, -1 + #1, #2, 1 + #3, #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #2*j[fa1Test, -1 + #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #6*j[fa1Test, #1, #2, -1 + #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #5*j[fa1Test, #1, #2, #3, -1 + #4, 1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #8*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       -1 + #7, 1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #10*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] - #13*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, -1 + #12, 1 + #13, #14, #15, #16, #17] - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       -1 + #14, #15, #16, 1 + #17] + (-#3 + #6)*j[fa1Test, #1, #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, -1 + #16, #17] + #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, 
       -1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #2*j[fa1Test, #1, 1 + #2, -1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + #2*j[fa1Test, #1, 1 + #2, #3, #4, #5, 
       -1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#2*j[fa1Test, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17], 
    #3*j[fa1Test, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - (#11*j[fa1Test, #1, -1 + #2, #3, #4, #5, 
        #6, #7, #8, #9, #10, 1 + #11, #12, #13, #14, #15, #16, #17])/2 - 
     #3*j[fa1Test, #1, -1 + #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + 
     (#11*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, 1 + #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, -1 + #15, 1 + #16, #17] + (#1 - #3)*j[fa1Test, #1, #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, #16, -1 + #17] - #12*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, 1 + #12, -1 + #13, #14, #15, #16, #17] - 
     (#11*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #9*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] - #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       1 + #7, -1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #4*j[fa1Test, #1, #2, #3, 1 + #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - #1*j[fa1Test, 1 + #1, #2, -1 + #3, #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #1*j[fa1Test, 1 + #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#1*j[fa1Test, 1 + #1, #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17], 
    #3*j[fa1Test, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - #6*j[fa1Test, #1, -1 + #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #3*j[fa1Test, #1, -1 + #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + (d - #15 - #17 - 2*#2 - #3 - #5 - #6 - 
       #8 - #10 - #13)*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     #6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, 
       #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17], 
    -(#12*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, #16, #17] - #9*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, -1 + #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#1*j[fa1Test, 1 + #1, #2, #3, #4, 
       #5, #6, #7, #8, -1 + #9, #10, #11, #12, #13, #14, #15, #16, #17], 
    -(#13*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]) - #10*y2*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, 1 + #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + 2*#6*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, -1 + #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#2*j[fa1Test, #1, 1 + #2, #3, #4, 
       #5, #6, #7, #8, #9, -1 + #10, #11, #12, #13, #14, #15, #16, #17], 
    -(#12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, #16, #17] - #9*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + 2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#1*j[fa1Test, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, #16, #17]*sp[b, P] - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, #15, 1 + #16, #17]*sp[b, Q], 
    -(#13*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]) - #10*y6*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, 1 + #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + 2*#6*y5*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + 2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#2*j[fa1Test, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] - #17*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, 1 + #17]*sp[b, P] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, #17]*sp[b, Q], 
    -2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, -1 + #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, -1 + #17] - 
     2*#1*j[fa1Test, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, -1 + #14, #15, #16, #17] - #12*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, 1 + #12, #13, #14, #15, #16, #17]*sp[b, P] - 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, q] - 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, v1], 
    -2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] - 2*#2*j[fa1Test, #1, 1 + #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, -1 + #17] - 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, P] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, q] - 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, v1], 
    -(#3*j[fa1Test, #1, -1 + #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]) - #12*y5*j[fa1Test, #1, #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, 1 + #12, #13, #14, #15, #16, #17] - 
     #11*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, #16, #17] - #9*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - 2*#1*j[fa1Test, 1 + #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, #16, #17]*sp[P, q] - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, #15, 1 + #16, #17]*sp[q, Q], 
    -(#6*j[fa1Test, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]) - #3*j[fa1Test, #1, -1 + #2, 1 + #3, 
       #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     (-#2 + #6)*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - #13*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, #15, #16, #17] + #6*y3*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] + #2*j[fa1Test, #1, 1 + #2, #3, #4, #5, 
       -1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #2*y3*j[fa1Test, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, #13, #14, #15, #16, 1 + #17]*sp[P, q] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, #17]*sp[q, Q], 
    -2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] - 
     2*#1*j[fa1Test, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, -1 + #16, #17] - #12*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, 1 + #12, #13, #14, #15, #16, #17]*sp[b, Q] - 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[q, Q] - 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[Q, v1], 
    -2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, -1 + #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, -1 + #16, #17] - 2*#2*j[fa1Test, #1, 1 + #2, #3, #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, -1 + #15, #16, #17] - 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, Q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[q, Q] - 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[Q, v1], 
    -(#7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17]) - #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, #7, -1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#1*j[fa1Test, 1 + #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #14*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13, 1 + #14, #15, #16, #17]*sp[P, v1] - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, #15, 1 + #16, #17]*sp[Q, v1], 
    -(#8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17]) - 2*#6*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, -1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, 
       -1 + #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#2*j[fa1Test, #1, 1 + #2, #3, #4, 
       #5, #6, #7, -1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, #15, #16, 1 + #17]*sp[P, v1] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, #17]*sp[Q, v1], 
    -(#7*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17]) - #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, #4, 
       -1 + #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#1*j[fa1Test, 1 + #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17], 
    -2*#6*j[fa1Test, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #8*y1*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, 1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17] - 2*#3*j[fa1Test, #1, #2, 1 + #3, -1 + #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 2*#2*j[fa1Test, #1, 1 + #2, #3, #4, 
       -1 + #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17]} & 
fa1Test /: Information[fa1Test] := 
  (If[ValueQ[fa1Test::usage], Information[fa1Test, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[fa1Test] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[fa1Test, __]]] :> 
           HoldForm[LiteRed`Private`f$[fa1Test, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[
              fa1Test, ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[
                  fa1Test], HoldPattern[LiteRed`Private`a$_ :> 
                    LiteRed`Private`b$_] /; MatchQ[LiteRed`Private`a$[[1,0]], 
                   LiteRed`Private`x$[[1,0]]]] /. HoldPattern -> 
                 HoldForm]]) & , Appearance -> "Frameless", 
           BaseStyle -> "InformationLink"]}, {1}]], 5], 
     DefaultBaseStyle -> "InfoGrid"]])
fa1Test /: jRules[fa1Test, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0] := {j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
     (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?Positive, 
     (n8_)?NonPositive, (n9_)?NonPositive, (n10_)?NonPositive, 
     (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
     (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
     (n17_)?NonPositive] :> Expand[j[fa1Test, n2, n1, n3, n5, n4, 0, n8, n7, 
       n10, n9, 0, n13, n12, n17, n16, n15, n14]/
      ((j[fa1Test, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 - 
         j[fa1Test, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 + 
         (y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])/
          2)^n11*(j[fa1Test, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          0] - 2*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 
           0] + y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0])^n6)]}
fa1Test /: jsOrder[fa1Test] := {"np", "cp", "-ds", "-ns"}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive, 
      (n8_)?NonPositive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}, 
   {j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive, 
      (n8_)?NonPositive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n2, n1, n3, n5, n4, 0, n8, n7, 
        n10, n9, 0, n13, n12, n17, n16, n15, n14]/
       ((j[fa1Test, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 - 
          j[fa1Test, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 + 
          (y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])/
           2)^n11*(j[fa1Test, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0] - 2*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
            0, 0] + y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0])^n6)]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive, 
      (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?Positive, 
      (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}, 
   {j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?NonPositive, (n7_)?Positive, 
      (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n2, n1, n3, n5, n4, 0, n8, n7, 
        n10, n9, 0, n13, n12, n17, n16, n15, n14]/
       ((j[fa1Test, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 - 
          j[fa1Test, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]/2 + 
          (y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])/
           2)^n11*(j[fa1Test, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0] - 2*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
            0, 0] + y3*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0])^n6)]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?Positive, (n7_)?NonPositive, 
      (n8_)?NonPositive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?Positive, (n7_)?NonPositive, 
      (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
      (n8_)?NonPositive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}}
fa1Test /: jSymmetries[fa1Test, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
   0, 0] := {{j[fa1Test, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, 
      (n4_)?Positive, (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, 
      (n8_)?Positive, (n9_)?NonPositive, (n10_)?NonPositive, 
      (n11_)?NonPositive, (n12_)?NonPositive, (n13_)?NonPositive, 
      (n14_)?NonPositive, (n15_)?NonPositive, (n16_)?NonPositive, 
      (n17_)?NonPositive] :> Expand[j[fa1Test, n1, n2, n3, n4, n5, n6, n7, 
       n8, n9, n10, n11, n12, n13, n14, n15, n16, n17]]}}
fa1Test /: LI[fa1Test] := 
  {#12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17] + 
     #11*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] + #13*yb*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, -1 + #10, #11, #12, 1 + #13, #14, #15, #16, #17] + 
     (#9 + #10 - #12 - #13)*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13, #14, #15, #16, #17] - 
     #11*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       -1 + #12, #13, #14, #15, #16, #17] - 
     #10*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] - #9*y2*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, -1 + #12, #13, #14, #15, #16, #17] - 
     2*#6*y5*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#6*y4*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13, #14, #15, #16, #17] - 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13, #14, #15, #16, #17] + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[b, P] + 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[b, P] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[b, Q] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[b, Q], 
    -(#13*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, -1 + #17]) - 
     #12*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, -1 + #14, #15, #16, #17] - #11*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, -1 + #14, #15, #16, #17] - 
     #10*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] - #9*y2*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] + 
     2*#6*y4*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, -1 + #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] + 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, P] + 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, P] + 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, v1] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, v1], 
    -1/2*(#13*y6*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 
        #11, #12, 1 + #13, #14, #15, #16, #17]) - 
     (#10*y2*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, 
        #11, #12, #13, #14, #15, #16, #17])/2 + 
     #6*y4*j[fa1Test, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + #3*y4*j[fa1Test, #1, -1 + #2, 1 + #3, 
       #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     (#13*y6*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
        #12, 1 + #13, #14, #15, #16, #17])/2 + 
     (#10*y2*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, 1 + #10, 
        #11, #12, #13, #14, #15, #16, #17])/2 + 
     #12*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17] + 
     #11*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] + #13*y5*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, -1 + #10, #11, #12, 1 + #13, #14, #15, #16, #17] - 
     #12*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       1 + #12, #13, #14, #15, #16, #17] - (#6 - #9 - #10 + #11)*y4*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17] - (#13*y3*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, #12, 1 + #13, #14, #15, #16, #17])/2 - 
     (#10*y2*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #9*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17] - 2*#6*y3*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, -1 + #10, #11, #12, #13, #14, #15, #16, #17] + 
     #6*y3*y4*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #3*y4*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, -1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       -1 + #11, #12, #13, #14, #15, #16, #17] + 
     #3*y3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + #14*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, #8, -1 + #9, #10, #11, #12, #13, 1 + #14, #15, #16, #17]*
      sp[P, q] + #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13, #14, #15, #16, 1 + #17]*sp[P, q] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[q, Q] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[q, Q], 
    -(#13*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, -1 + #15, #16, #17]) - 
     #12*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, #14, #15, -1 + #16, #17] - #11*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, #14, #15, -1 + #16, #17] - 
     #10*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] - #9*y2*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] + 
     2*#6*y4*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, -1 + #16, #17] + 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, Q] + 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, Q] + 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[Q, v1] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[Q, v1], 
    -(#12*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y2*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, -1 + #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y2*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + #8*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, 1 + #8, #9, -1 + #10, #11, #12, #13, #14, #15, #16, #17] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, -1 + #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + 2*#6*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       1 + #6, #7, -1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, 
       #5, #6, #7, #8, -1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, v1] + 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[P, v1] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[Q, v1] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[Q, v1], 
    -(#12*y6*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y4*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y2*j[fa1Test, #1, #2, #3, -1 + #4, 
       #5, #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*y6*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y2*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + 2*#6*y4*j[fa1Test, #1, #2, #3, #4, 
       -1 + #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #8*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + #7*y1*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, 1 + #7, #8, -1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, -1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, -1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y4*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17], 
    -(#13*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, -1 + #17]) - 
     #12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, -1 + #14, #15, #16, #17] - #11*y5*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, -1 + #14, #15, #16, #17] - 
     #10*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] - #9*y6*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] + 
     2*#6*y5*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, -1 + #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] - (#14 + #17 - #12 - #13)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[b, P] - #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, #13, -1 + #14, #15, 1 + #16, #17]*sp[b, Q] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, -1 + #17]*sp[b, Q] + 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       -1 + #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[P, q] + 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[P, v1] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17]*sp[P, v1], 
    -1/2*(#13*yb*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 
        #11, #12, 1 + #13, #14, #15, #16, #17]) - 
     (#10*y6*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, 
        #11, #12, #13, #14, #15, #16, #17])/2 + 
     #6*y5*j[fa1Test, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + #3*y5*j[fa1Test, #1, -1 + #2, 1 + #3, 
       #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     (#13*yb*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
        #12, 1 + #13, #14, #15, #16, #17])/2 + 
     (#10*y6*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, 1 + #10, 
        #11, #12, #13, #14, #15, #16, #17])/2 - 
     #12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       1 + #12, #13, #14, #15, #16, #17] - (#6 + #11 - #12 - #13)*y5*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17] - (#13*y3*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, #12, 1 + #13, #14, #15, #16, #17])/2 + 
     #11*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       -1 + #12, #13, #14, #15, #16, #17] + 
     #10*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] - 
     (#10*y3*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #9*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17] + #9*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, -1 + #12, #13, #14, #15, #16, #17] - 
     2*#6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13, #14, #15, #16, #17] + 
     #6*y3*y5*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - #3*y5*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, -1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       -1 + #11, #12, #13, #14, #15, #16, #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13, #14, #15, #16, #17] + 
     #3*y3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] - 
     (#17*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[b, P])/2 + 
     (#17*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[b, P])/2 - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[b, P] - 
     (#17*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[b, P])/2 - 
     (#15*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[b, Q])/2 + 
     (#15*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[b, Q])/2 - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[b, Q] - 
     (#15*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[b, Q])/2 + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, q] + 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, 1 + #17]*sp[P, q] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13, #14, #15, 1 + #16, #17]*sp[q, Q] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, 1 + #15, #16, #17]*sp[q, Q], 
    -(#13*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, -1 + #15, #16, #17]) - 
     #12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, #14, #15, -1 + #16, #17] - #11*y5*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, #14, #15, -1 + #16, #17] - 
     #10*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] - #9*y6*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] + 
     2*#6*y5*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, -1 + #16, #17] - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, -1 + #15, #16, 1 + #17]*sp[b, P] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, -1 + #16, #17]*sp[b, P] - (#15 + #16 - #12 - #13)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[b, Q] + #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, 1 + #11, -1 + #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[q, Q] + 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17]*sp[Q, v1] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17]*sp[Q, v1], 
    -(#12*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y6*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, -1 + #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*yb*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y6*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + #8*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       #7, 1 + #8, #9, #10, #11, #12, -1 + #13, #14, #15, #16, #17] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       -1 + #12, #13, #14, #15, #16, #17] + 
     2*#6*y5*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     #5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, 
       #5, #6, #7, #8, #9, #10, #11, -1 + #12, #13, #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[b, P] - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[b, P] - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[b, Q] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[b, Q] + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, v1] + 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, 1 + #17]*sp[P, v1] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13, #14, #15, 1 + #16, #17]*sp[Q, v1] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, 1 + #15, #16, #17]*sp[Q, v1], 
    -(#12*yb*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
        1 + #12, #13, #14, #15, #16, #17]) - 
     #11*y5*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y6*j[fa1Test, #1, #2, #3, -1 + #4, 
       #5, #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*yb*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y6*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + 2*#6*y5*j[fa1Test, #1, #2, #3, #4, 
       -1 + #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     #8*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + #7*y1*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, 1 + #7, #8, #9, #10, #11, -1 + #12, #13, #14, #15, #16, #17] + 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13, #14, #15, #16, #17] + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, -1 + #12, #13, #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y5*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[b, P] - 
     #17*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[b, P] - 
     #16*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[b, Q] - 
     #15*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[b, Q], 
    #13*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, -1 + #17] + 
     #12*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, -1 + #14, #15, #16, #17] + #11*y3*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, -1 + #14, #15, #16, #17] + 
     #10*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] + #9*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] - 
     2*#6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, -1 + #14, #15, #16, #17] - 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, -1 + #17] - 
     (#13*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, P])/2 + 
     (#13*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, P])/2 - 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, P] - 
     (#13*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, P])/2 + 
     #6*j[fa1Test, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     #3*j[fa1Test, #1, -1 + #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + (#14 + #17 - #6 - #11)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[P, q] + #6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[P, q] - 
     (#8*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]*sp[P, v1])/2 + 
     (#8*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]*sp[P, v1])/2 - 
     (#8*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17]*sp[P, v1])/2 - 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, v1] + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       -1 + #14, #15, 1 + #16, #17]*sp[q, Q] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, -1 + #17]*sp[q, Q], 
    -(#13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, -1 + #15, #16, #17]*sp[b, P]) - 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, #14, #15, -1 + #16, #17]*sp[b, P] + 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, -1 + #17]*sp[b, Q] + 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, -1 + #14, #15, #16, #17]*sp[b, Q] - 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, #14, #15, -1 + #16, #17]*sp[P, q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, -1 + #16, #17]*sp[P, q] - 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17]*sp[P, v1] - 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, -1 + #16, #17]*sp[P, v1] + 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13, -1 + #14, #15, #16, #17]*sp[q, Q] - 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, -1 + #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17]*sp[q, Q] + 
     #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17]*sp[Q, v1] + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13, -1 + #14, #15, #16, #17]*sp[Q, v1], 
    #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13, 
       #14, #15, #16, -1 + #17] + #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       1 + #7, #8, #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] + 
     #5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] + #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] - 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, P] - 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, P] - 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + (#14 + #17 - #7 - #8)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[P, v1] + #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, #13, -1 + #14, #15, 1 + #16, #17]*sp[Q, v1] + 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, 1 + #15, #16, -1 + #17]*sp[Q, v1], 
    #8*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] + #7*y1*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, 1 + #7, #8, #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] + 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, -1 + #17] + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13, -1 + #14, #15, #16, #17] - 
     #12*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, P] - 
     #13*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, P] - 
     #11*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, q] - 
     #7*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, v1] - 
     #8*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[P, v1], 
    -(#13*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, -1 + #15, #16, #17]) - 
     #12*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13, #14, #15, -1 + #16, #17] - #11*y3*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, 1 + #11, #12, #13, #14, #15, -1 + #16, #17] - 
     #10*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] - #9*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] + 
     2*#6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, -1 + #15, #16, #17] + 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, -1 + #16, #17] + 
     (#13*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, Q])/2 - 
     (#13*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, Q])/2 + 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, Q] + 
     (#13*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13, #14, #15, #16, #17]*sp[b, Q])/2 - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, -1 + #15, #16, 1 + #17]*sp[P, q] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, -1 + #16, #17]*sp[P, q] - 
     #6*j[fa1Test, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     #3*j[fa1Test, #1, -1 + #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - (#15 + #16 - #6 - #11)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[q, Q] - #6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     #3*j[fa1Test, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     #3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, #17]*sp[q, Q] + 
     (#8*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]*sp[Q, v1])/2 - 
     (#8*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]*sp[Q, v1])/2 + 
     (#8*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17]*sp[Q, v1])/2 + 
     #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[Q, v1], 
    (#8*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     (#5*y1*j[fa1Test, #1, -1 + #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     (#8*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #12*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17] - 
     #11*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y4*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, -1 + #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*y5*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y4*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + 
     (#8*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17])/2 + #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       1 + #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     2*#6*y3*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     (#5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, -1 + #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     (#5*y1*y3*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17] + 2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, 
       #5, #6, -1 + #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, q] - 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[P, q] + 
     (#17*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[P, v1])/2 - 
     (#17*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[P, v1])/2 + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, v1] + 
     (#17*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, 1 + #17]*sp[P, v1])/2 - 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[q, Q] - 
     #15*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[q, Q] + 
     (#15*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[Q, v1])/2 - 
     (#15*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[Q, v1])/2 + 
     #16*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[Q, v1] + 
     (#15*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, 1 + #15, #16, #17]*sp[Q, v1])/2, 
    (#8*y1*j[fa1Test, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     (#5*j[fa1Test, #1, -1 + #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 - 
     #12*y5*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17] - 
     #11*y3*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17] - #9*y4*j[fa1Test, #1, #2, #3, -1 + #4, 
       #5, #6, #7, #8, 1 + #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #13*y5*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, 1 + #13, #14, #15, #16, #17] - 
     #10*y4*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, 1 + #10, #11, 
       #12, #13, #14, #15, #16, #17] + 2*#6*y3*j[fa1Test, #1, #2, #3, #4, 
       -1 + #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     (#8*y1*j[fa1Test, #1, #2, #3, #4, #5, -1 + #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     (#8*y1*y3*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     #7*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, -1 + #11, 
       #12, #13, #14, #15, #16, #17] - 
     (#5*j[fa1Test, #1, #2, #3, #4, 1 + #5, -1 + #6, #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17])/2 + 
     (#5*y3*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
        #13, #14, #15, #16, #17])/2 + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, -1 + #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] + 
     2*#3*y3*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, 
       #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, q] - 
     #17*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[P, q] - 
     #16*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[q, Q] - 
     #15*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[q, Q], 
    #8*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13, 
       #14, -1 + #15, #16, #17] + #7*j[fa1Test, #1, #2, #3, #4, #5, #6, 
       1 + #7, #8, #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] + 
     #5*y1*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] + #4*y1*j[fa1Test, #1, #2, #3, 1 + #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] - 
     #12*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, Q] - 
     #13*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, Q] + 
     #17*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       #14, -1 + #15, #16, 1 + #17]*sp[P, v1] + 
     #14*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, 
       1 + #14, #15, -1 + #16, #17]*sp[P, v1] - 
     #11*j[fa1Test, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + (#15 + #16 - #7 - #8)*
      j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13, #14, 
       #15, #16, #17]*sp[Q, v1], 
    #8*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] + #7*y1*j[fa1Test, #1, #2, #3, #4, #5, 
       #6, 1 + #7, #8, #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] + 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, -1 + #15, #16, #17] + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13, #14, #15, -1 + #16, #17] - 
     #12*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       1 + #12, #13, #14, #15, #16, #17]*sp[b, Q] - 
     #13*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       1 + #13, #14, #15, #16, #17]*sp[b, Q] - 
     #11*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 1 + #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#6*j[fa1Test, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] + 
     2*#3*j[fa1Test, #1, #2, 1 + #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[q, Q] - 
     #7*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[Q, v1] - 
     #8*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17]*sp[Q, v1], 
    -(#7*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
        #12, #13, #14, #15, #16, #17]) - #8*j[fa1Test, #1, #2, #3, #4, 
       -1 + #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     (#4 + #5 - #7 - #8)*y1*j[fa1Test, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13, #14, #15, #16, #17] + 
     #5*j[fa1Test, #1, #2, #3, #4, 1 + #5, #6, #7, -1 + #8, #9, #10, #11, 
       #12, #13, #14, #15, #16, #17] + #4*j[fa1Test, #1, #2, #3, 1 + #4, #5, 
       #6, -1 + #7, #8, #9, #10, #11, #12, #13, #14, #15, #16, #17] - 
     #14*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, 1 + #14, #15, #16, #17]*sp[P, v1] - 
     #17*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, #16, 1 + #17]*sp[P, v1] - 
     #16*j[fa1Test, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, #15, 1 + #16, #17]*sp[Q, v1] - 
     #15*j[fa1Test, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, #12, 
       #13, #14, 1 + #15, #16, #17]*sp[Q, v1]} & 
fa1Test /: LMs[fa1Test] := {l1, l3}
fa1Test /: MappedSectors[fa1Test] := 
  {js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: MIs[fa1Test] := {}
fa1Test /: NDs[fa1Test] := 17
fa1Test /: NonZeroSectors[fa1Test] := 
  {js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: Parameters[fa1Test] := {y1, y2, y3, y4, y5, y6, yb, sp[b, P], 
   sp[b, Q], sp[P, q], sp[P, v1], sp[q, Q], sp[Q, v1], d}
fa1Test /: PowerShifts[fa1Test] := {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}
fa1Test /: SectorsMappings[fa1Test] := 
  {js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] -> 
    js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: SectorsPattern[fa1Test] := {_, _, _, _, _, _, _, _, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}
fa1Test /: SimpleSectors[fa1Test] := 
  {js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: SPs[fa1Test] := {sp[a, l1], sp[a, l3], sp[b, l1], sp[b, l3], 
   sp[l1, l1], sp[l1, l3], sp[l1, P], sp[l1, q], sp[l1, Q], sp[l1, v1], 
   sp[l1, v2], sp[l3, l3], sp[l3, P], sp[l3, q], sp[l3, Q], sp[l3, v1], 
   sp[l3, v2]}
fa1Test /: SR[fa1Test] := 
  Module[{LiteRed`Private`jsc$ = jSector[j[fa1Test, ##1]]}, 
    If[MemberQ[UniqueSectors[fa1Test], LiteRed`Private`jsc$], 
     DeleteCases[DeleteDuplicates[Collectj[j[fa1Test, ##1] - 
         (j[fa1Test, ##1] /. jSymmetries @@ LiteRed`Private`jsc$)]], 0], 
     {}]] & 
fa1Test /: Toj[fa1Test] := {sp[a, l1] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 
     -1, 0, 0, 0, 0, 0, 0, 0, 0], sp[a, l3] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0], 
   sp[b, l1] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
     0], sp[b, l3] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 
     0, 0, 0], sp[l1, l1] -> j[fa1Test, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0], sp[l1, l3] -> 
    (-j[fa1Test, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] + 
      j[fa1Test, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] - 
      j[fa1Test, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] + 
      2*j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0])/2, 
   sp[l1, P] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 
     0], sp[l1, q] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 
     0, 0, 0], sp[l1, Q] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, -1, 0], sp[l1, v1] -> j[fa1Test, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0], sp[l1, v2] -> j[fa1Test, 0, 0, 0, -1, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0], sp[l3, l3] -> j[fa1Test, 0, -1, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0], sp[l3, P] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1], 
   sp[l3, q] -> (y3 + j[fa1Test, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
       0, 0, 0] - j[fa1Test, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
       0])/2, sp[l3, Q] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, -1, 0, 0], sp[l3, v1] -> j[fa1Test, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 
     0, 0, 0, 0, 0, 0], sp[l3, v2] -> j[fa1Test, 0, 0, 0, 0, -1, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: UniqueSectors[fa1Test] := 
  {js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: ZerojRule[fa1Test] := LiteRed`Private`jjj:j[fa1Test, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
        {1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
        {1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
        {1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
        {0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}}]
fa1Test /: ZeroSectors[fa1Test] := {js[fa1Test, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0], js[fa1Test, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0, 0, 0], js[fa1Test, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0], js[fa1Test, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[fa1Test, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
fa1Test /: SectorsMappings[fa1Test, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[fa1Test], HoldPattern[
    js[fa1Test, LiteRed`Private`ns$] -> _]]
fa1Test::usage = "2-loop basis with 7 external momenta.\nUse \
Information[fa1Test] to get basis summary.\nThis string can be redefined by \
setting fa1Test::usage=\"\[Ellipsis]\""; Information[fa1Test, 
  LongForm -> False]; 
LiteRed`Private`CheckDefs[fa1Test]
BasisDirectory[fa1Test]
