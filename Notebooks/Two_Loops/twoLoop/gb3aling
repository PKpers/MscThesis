BasisDirectory[gb3aling] = StringDrop[DirectoryName[$Input], -1]
gb3aling /: BasisSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/BasisSectors[gb3aling]"]]
gb3aling /: CurrentState[gb3aling] := <|NewDsBasis -> True, 
   GenerateIBP -> True, AnalyzeSectors -> True, FindSymmetries -> False|>
gb3aling /: CutDs[gb3aling] := {1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}
gb3aling /: Definitions[gb3aling] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l1], Declare[l1, Vector]], Hold[VecQ[l2], Declare[l2, Vector]], 
   Hold[VecQ[a], Declare[a, Vector]], Hold[VecQ[b], Declare[b, Vector]], 
   Hold[VecQ[q], Declare[q, Vector]], Hold[VecQ[v1], Declare[v1, Vector]], 
   Hold[VecQ[v2], Declare[v2, Vector]], 
   Hold[LiteRed`Private`ExpresionType[a] === LiteRed`Private`ExpresionType[
      a], Declare[a, LiteRed`Private`ExpresionType[a]]], 
   Hold[LiteRed`Private`ExpresionType[b] === LiteRed`Private`ExpresionType[
      b], Declare[b, LiteRed`Private`ExpresionType[b]]], 
   Hold[LiteRed`Private`ExpresionType[q] === LiteRed`Private`ExpresionType[
      q], Declare[q, LiteRed`Private`ExpresionType[q]]], 
   Hold[LiteRed`Private`ExpresionType[v1] === LiteRed`Private`ExpresionType[
      v1], Declare[v1, LiteRed`Private`ExpresionType[v1]]], 
   Hold[LiteRed`Private`ExpresionType[v2] === LiteRed`Private`ExpresionType[
      v2], Declare[v2, LiteRed`Private`ExpresionType[v2]]], 
   Hold[LiteRed`Private`ExpresionType[y1] === LiteRed`Private`ExpresionType[
      y1], Declare[y1, LiteRed`Private`ExpresionType[y1]]], 
   Hold[LiteRed`Private`ExpresionType[y2] === LiteRed`Private`ExpresionType[
      y2], Declare[y2, LiteRed`Private`ExpresionType[y2]]], 
   Hold[LiteRed`Private`ExpresionType[y4] === LiteRed`Private`ExpresionType[
      y4], Declare[y4, LiteRed`Private`ExpresionType[y4]]], 
   Hold[LiteRed`Private`ExpresionType[y5] === LiteRed`Private`ExpresionType[
      y5], Declare[y5, LiteRed`Private`ExpresionType[y5]]], 
   Hold[LiteRed`Private`ExpresionType[y6] === LiteRed`Private`ExpresionType[
      y6], Declare[y6, LiteRed`Private`ExpresionType[y6]]], 
   Hold[LiteRed`Private`ExpresionType[yb] === LiteRed`Private`ExpresionType[
      yb], Declare[yb, LiteRed`Private`ExpresionType[yb]]], 
   Hold[sp[a, a] === y2, sp[a, a] = y2], Hold[sp[b, b] === yb, 
    sp[b, b] = yb], Hold[sp[q, q] === y4, sp[q, q] = y4], 
   Hold[sp[v1, v1] === 1, sp[v1, v1] = 1], Hold[sp[v2, v2] === 1, 
    sp[v2, v2] = 1], Hold[sp[a, b] === 0, sp[a, b] = 0], 
   Hold[sp[a, q] === y5, sp[a, q] = y5], Hold[sp[a, v1] === 0, 
    sp[a, v1] = 0], Hold[sp[a, v2] === 0, sp[a, v2] = 0], 
   Hold[sp[b, q] === y6, sp[b, q] = y6], Hold[sp[b, v1] === 0, 
    sp[b, v1] = 0], Hold[sp[b, v2] === 0, sp[b, v2] = 0], 
   Hold[sp[q, v1] === 0, sp[q, v1] = 0], Hold[sp[q, v2] === 0, 
    sp[q, v2] = 0], Hold[sp[v1, v2] === y1, sp[v1, v2] = y1]}
gb3aling /: Ds[gb3aling] := {sp[l1, v2], sp[l2, v2], sp[l1, l1], sp[l2, l2], 
   sp[-l1 - l2 + q, -l1 - l2 + q], sp[l1 + l2, l1 + l2], sp[a, l1 + l2], 
   sp[b, l1], sp[b, l2], sp[l1, v1], sp[l2, v1], sp[l1, q], sp[a, l1]}
gb3aling /: DsBasisQ[gb3aling] := True
gb3aling /: EMs[gb3aling] := {a, b, q, v1, v2}
gb3aling /: ExtMappedSectors[gb3aling] := {}
gb3aling /: ExtSectorsMappings[gb3aling] := {}
gb3aling /: IBP[gb3aling] := Get[StringJoin[BasisDirectory[gb3aling], 
    "/IBP[gb3aling]"]]
gb3aling /: Information[gb3aling] := 
  (If[ValueQ[gb3aling::usage], Information[gb3aling, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[gb3aling] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[gb3aling, __]]] :> 
           HoldForm[LiteRed`Private`f$[gb3aling, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[
              gb3aling, ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[
                  gb3aling], HoldPattern[LiteRed`Private`a$_ :> 
                    LiteRed`Private`b$_] /; MatchQ[LiteRed`Private`a$[[1,0]], 
                   LiteRed`Private`x$[[1,0]]]] /. HoldPattern -> 
                 HoldForm]]) & , Appearance -> "Frameless", 
           BaseStyle -> "InformationLink"]}, {1}]], 5], 
     DefaultBaseStyle -> "InfoGrid"]])
gb3aling /: jRules[gb3aling, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[gb3aling], 
    "/jRules[gb3aling, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]"]]
gb3aling /: jRules[gb3aling, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[gb3aling], 
    "/jRules[gb3aling, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]"]]
gb3aling /: jsOrder[gb3aling] := {"np", "cp", "-ds", "-ns"}
gb3aling /: jsOrder[gb3aling, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{-1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{-1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, -1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1}, 
   {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jsOrder[gb3aling, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1}, 
   {0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1}, 
   {1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 
    0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
    0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 0}}
gb3aling /: jSymmetries[gb3aling, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[gb3aling], 
    "/jSymmetries[gb3aling, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]"]]
gb3aling /: jSymmetries[gb3aling, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[gb3aling], 
    "/jSymmetries[gb3aling, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]"]]
gb3aling /: LI[gb3aling] := Get[StringJoin[BasisDirectory[gb3aling], 
    "/LI[gb3aling]"]]
gb3aling /: LMs[gb3aling] := {l1, l2}
gb3aling /: MappedSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/MappedSectors[gb3aling]"]]
gb3aling /: MIs[gb3aling] := Get[StringJoin[BasisDirectory[gb3aling], 
    "/MIs[gb3aling]"]]
gb3aling /: NDs[gb3aling] := 13
gb3aling /: NonZeroSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/NonZeroSectors[gb3aling]"]]
gb3aling /: Parameters[gb3aling] := {y1, y2, y4, y5, y6, yb, d}
gb3aling /: PowerShifts[gb3aling] := {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
gb3aling /: SectorsMappings[gb3aling] := {}
gb3aling /: SectorsPattern[gb3aling] := {_, _, _, _, _, _, 0, 0, 0, 0, 0, 0, 
   0}
gb3aling /: SimpleSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/SimpleSectors[gb3aling]"]]
gb3aling /: SPs[gb3aling] := {sp[a, l1], sp[a, l2], sp[b, l1], sp[b, l2], 
   sp[l1, l1], sp[l1, l2], sp[l1, q], sp[l1, v1], sp[l1, v2], sp[l2, l2], 
   sp[l2, q], sp[l2, v1], sp[l2, v2]}
gb3aling /: SR[gb3aling] := Get[StringJoin[BasisDirectory[gb3aling], 
    "/SR[gb3aling]"]]
gb3aling /: Toj[gb3aling] := 
  {sp[a, l1] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1], 
   sp[a, l2] -> j[gb3aling, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0] - 
     j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1], 
   sp[b, l1] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0], 
   sp[b, l2] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0], 
   sp[l1, l1] -> j[gb3aling, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[l1, l2] -> (-j[gb3aling, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] - 
      j[gb3aling, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0] + 
      j[gb3aling, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0])/2, 
   sp[l1, q] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0], 
   sp[l1, v1] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0], 
   sp[l1, v2] -> j[gb3aling, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[l2, l2] -> j[gb3aling, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[l2, q] -> (y4 - j[gb3aling, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0] + 
      j[gb3aling, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0] - 
      2*j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0])/2, 
   sp[l2, v1] -> j[gb3aling, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0], 
   sp[l2, v2] -> j[gb3aling, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
gb3aling /: UniqueSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/UniqueSectors[gb3aling]"]]
gb3aling /: ZerojRule[gb3aling] := LiteRed`Private`jjj:j[gb3aling, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 0, 1, 1, 0, 0, 0, 
         0, 0, 0, 0}, {1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}, 
        {1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 0, 0, 0, 
         0, 0, 0, 0}}]
gb3aling /: ZeroSectors[gb3aling] := 
  Get[StringJoin[BasisDirectory[gb3aling], "/ZeroSectors[gb3aling]"]]
gb3aling /: SectorsMappings[gb3aling, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[gb3aling], HoldPattern[
    js[gb3aling, LiteRed`Private`ns$] -> _]]
gb3aling::usage = "2-loop basis with 5 external momenta.\nUse \
Information[gb3aling] to get basis summary.\nThis string can be redefined by \
setting gb3aling::usage=\"\[Ellipsis]\""; Information[gb3aling, 
  LongForm -> False]; 
LiteRed`Private`CheckDefs[gb3aling]
BasisDirectory[gb3aling]
