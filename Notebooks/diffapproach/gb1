BasisDirectory[gb1] = StringDrop[DirectoryName[$Input], -1]
gb1 /: BasisSectors[gb1] := {js[gb1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]}
gb1 /: CurrentState[gb1] := <|NewDsBasis -> True, GenerateIBP -> True, 
   AnalyzeSectors -> True, FindSymmetries -> False|>
gb1 /: CutDs[gb1] := {1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}
gb1 /: Definitions[gb1] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l1], Declare[l1, Vector]], Hold[VecQ[q], Declare[q, Vector]], 
   Hold[VecQ[a], Declare[a, Vector]], Hold[VecQ[b], Declare[b, Vector]], 
   Hold[VecQ[l2], Declare[l2, Vector]], Hold[VecQ[v1], Declare[v1, Vector]], 
   Hold[VecQ[v2], Declare[v2, Vector]], 
   Hold[LiteRed`Private`ExpresionType[a] === LiteRed`Private`ExpresionType[
      a], Declare[a, LiteRed`Private`ExpresionType[a]]], 
   Hold[LiteRed`Private`ExpresionType[b] === LiteRed`Private`ExpresionType[
      b], Declare[b, LiteRed`Private`ExpresionType[b]]], 
   Hold[LiteRed`Private`ExpresionType[v1] === LiteRed`Private`ExpresionType[
      v1], Declare[v1, LiteRed`Private`ExpresionType[v1]]], 
   Hold[LiteRed`Private`ExpresionType[v2] === LiteRed`Private`ExpresionType[
      v2], Declare[v2, LiteRed`Private`ExpresionType[v2]]], 
   Hold[LiteRed`Private`ExpresionType[y1] === LiteRed`Private`ExpresionType[
      y1], Declare[y1, LiteRed`Private`ExpresionType[y1]]], 
   Hold[LiteRed`Private`ExpresionType[y2] === LiteRed`Private`ExpresionType[
      y2], Declare[y2, LiteRed`Private`ExpresionType[y2]]], 
   Hold[LiteRed`Private`ExpresionType[y4] === LiteRed`Private`ExpresionType[
      y4], Declare[y4, LiteRed`Private`ExpresionType[y4]]], 
   Hold[sp[a, a] === y2, sp[a, a] = y2], Hold[sp[b, b] === -1, 
    sp[b, b] = -1], Hold[sp[v1, v1] === 1, sp[v1, v1] = 1], 
   Hold[sp[v2, v2] === 1, sp[v2, v2] = 1], Hold[sp[a, b] === y4, 
    sp[a, b] = y4], Hold[sp[a, v1] === 0, sp[a, v1] = 0], 
   Hold[sp[a, v2] === 0, sp[a, v2] = 0], Hold[sp[b, v1] === 0, 
    sp[b, v1] = 0], Hold[sp[b, v2] === 0, sp[b, v2] = 0], 
   Hold[sp[v1, v2] === y1, sp[v1, v2] = y1]}
gb1 /: Ds[gb1] := {-t1 + sp[a, l1] + sp[b, q], sp[l1, v2], sp[q, v1], 
   sp[q, v2], sp[l1, l1], sp[-l1 - l2 + q, -l1 - l2 + q], sp[q, q], 
   sp[l1 + l2, l1 + l2], sp[b, l1], sp[a, q], sp[l1, v1], sp[a, l1], 
   sp[l1, q]}
gb1 /: DsBasisQ[gb1] := True
gb1 /: EMs[gb1] := {a, b, l2, v1, v2}
gb1 /: ExtMappedSectors[gb1] := {}
gb1 /: ExtSectorsMappings[gb1] := {}
gb1 /: IBP[gb1] := 
  {-(#8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
        #13]) - #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, 
       #11, #12, #13] + (d - #2 - 2*#5 - #8 - #9 - #11 - #12 - #13)*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13] - 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, #11, #12, 
       #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13] - #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13] + #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, #11, #12, #13]*sp[l2, l2] + 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, l2], -(#4*j[gb1, #1, -1 + #2, #3, 1 + #4, #5, #6, #7, #8, #9, 
        #10, #11, #12, #13]) - #13*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 
       #8, #9, #10, #11, #12, 1 + #13] + #6*j[gb1, #1, #2, #3, #4, -1 + #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13] - 
     #10*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, -1 + #12, 
       #13] - 2*#7*j[gb1, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, 
       #12, -1 + #13] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, 
       #9, #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, 
       #8, #9, #10, #11, #12, -1 + #13] - 
     #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13] - #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, 
       #11, #12, #13] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13]*sp[l2, l2], 
    -(#9*j[gb1, -1 + #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, #11, #12, 
        #13]) - #11*j[gb1, #1, #2, -1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       1 + #11, #12, #13] + #8*j[gb1, #1, #2, #3, #4, #5, -1 + #6, #7, 
       1 + #8, #9, #10, #11, #12, #13] - #13*j[gb1, #1, #2, #3, #4, #5, #6, 
       -1 + #7, #8, #9, #10, #11, #12, 1 + #13] - 
     #8*j[gb1, #1, #2, #3, #4, #5, #6, -1 + #7, 1 + #8, #9, #10, #11, #12, 
       #13] - #12*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, 
       1 + #12, #13] + (#6 - #8)*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13] + #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       1 + #9, #10, #11, -1 + #12, #13] - 
     #9*t1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, #11, #12, 
       #13] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, #10, 
       #11, #12, #13] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, 
       #9, #10, #11, #12, #13] - 2*#5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, 
       #8, #9, #10, #11, #12, -1 + #13] - 
     #2*j[gb1, #1, 1 + #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] - #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13], (d - #1 - #3 - #4 - #6 - 2*#7 - #10 - #13)*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13] - 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, -1 + #8, #9, #10, 
       #11, #12, #13] + #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13] - #1*t1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13], 
    -(#13*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
        1 + #13]) - #12*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, 1 + #12, #13] - #9*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       1 + #9, #10, #11, #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, #11, -1 + #12, #13] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13] - 2*#5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13] - #1*y2*j[gb1, 1 + #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, 
       #7, 1 + #8, #9, #10, #11, #12, #13]*sp[a, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[a, l2], -(#13*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        -1 + #12, 1 + #13]) - #10*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, 1 + #10, #11, #12, #13] - 2*#7*j[gb1, #1, #2, #3, #4, #5, #6, 
       1 + #7, #8, #9, -1 + #10, #11, #12, #13] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13] - #1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[a, l2], 
    -(#13*j[gb1, -1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13]) + 2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13] + #13*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, -1 + #12, 1 + #13] - #13*t1*j[gb1, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, 1 + #13] - 
     #12*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
       #13] + #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, #11, 
       #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, -1 + #9, 
       #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       -1 + #9, #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, -1 + #12, #13] - 
     2*#5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13] - #1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, 
       #11, #12, #13]*(t1 - sp[b, l2]) - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, 
       #7, 1 + #8, #9, #10, #11, #12, #13]*sp[b, l2], 
    -2*#7*j[gb1, -1 + #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13] - 2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, 
       #11, #12, #13] - #13*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, 
       #10, #11, #12, 1 + #13] - #10*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, 1 + #10, #11, #12, #13] + 2*#7*j[gb1, #1, #2, #3, #4, #5, #6, 
       1 + #7, #8, #9, #10, #11, -1 + #12, #13] - 
     2*#7*t1*j[gb1, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, -1 + #9, #10, 
       #11, #12, #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13] + #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13]*(t1 - sp[b, l2]), 
    #8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13] + #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, 
       #11, #12, #13] + (#13*j[gb1, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, 
        #10, #11, #12, 1 + #13])/2 - 
     (#13*j[gb1, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
        1 + #13])/2 - (#13*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, 
        #10, #11, #12, 1 + #13])/2 + (#5 - #6 - #8 + #13)*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13] + 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, -1 + #13] - #5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, -1 + #8, 
       #9, #10, #11, #12, #13] - #12*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, 1 + #12, #13]*sp[a, l2] - 
     #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[a, l2] - #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, #11, 
       #12, #13]*sp[b, l2] - #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2] - 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, l2] + #5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, 
       #11, #12, #13]*sp[l2, l2] - #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, 1 + #11, #12, #13]*sp[l2, v1] - 
     #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, v2], (#13*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, 
        #11, #12, 1 + #13])/2 - #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13] + #7*j[gb1, #1, #2, #3, #4, #5, 
       -1 + #6, 1 + #7, #8, #9, #10, #11, #12, #13] - 
     (#13*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
        1 + #13])/2 + (#6 - #7)*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13] - #7*j[gb1, #1, #2, #3, #4, #5, #6, 1 + #7, 
       -1 + #8, #9, #10, #11, #12, #13] + 
     2*#7*j[gb1, #1, #2, #3, #4, #5, #6, 1 + #7, #8, #9, #10, #11, #12, 
       -1 + #13] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, 
       #10, #11, #12, #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, -1 + #13] - #10*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, 1 + #10, #11, #12, #13]*sp[a, l2] - 
     #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[b, l2] + (#13*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
        #12, 1 + #13]*sp[l2, l2])/2 + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13]*sp[l2, l2] - 
     #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, v1] - #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13]*sp[l2, v2], 
    -(#13*j[gb1, #1, #2, -1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13]) + 2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13] - #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, 1 + #11, #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, -1 + #11, #12, #13] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13] - 2*#5*j[gb1, #1, #2, #3, #4, 1 + #5, #6, #7, #8, #9, #10, 
       -1 + #11, #12, #13] - #2*y1*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, #11, #12, #13]*sp[l2, v1] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, v1], -2*#7*j[gb1, #1, #2, -1 + #3, #4, #5, #6, 1 + #7, #8, #9, 
       #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, 
       #8, #9, #10, #11, #12, #13] - #13*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       #8, #9, #10, -1 + #11, #12, 1 + #13] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13] - #4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13] - #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13]*sp[l2, v1], 
    -2*#8*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13] - 2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, 
       #11, #12, #13] - 2*#5*j[gb1, #1, -1 + #2, #3, #4, 1 + #5, #6, #7, #8, 
       #9, #10, #11, #12, #13] - #13*j[gb1, #1, #2, #3, -1 + #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, 1 + #13] + 2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13] - 
     #11*y1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13] - #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, 
       #11, #12, #13]*sp[l2, v2] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, 
       #7, #8, #9, #10, #11, #12, #13]*sp[l2, v2], 
    -(#13*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        1 + #13]) + 2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13] - 2*#7*j[gb1, #1, #2, #3, -1 + #4, #5, #6, 1 + #7, 
       #8, #9, #10, #11, #12, #13] - 2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13] - 
     #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, #13] - 
     #3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, 
       #12, #13]*sp[l2, v2]} & 
gb1 /: Information[gb1] := (If[ValueQ[gb1::usage], 
    Information[gb1, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[gb1] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[gb1, __]]] :> 
           HoldForm[LiteRed`Private`f$[gb1, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[gb1, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[
                  gb1], HoldPattern[LiteRed`Private`a$_ :> 
                    LiteRed`Private`b$_] /; MatchQ[LiteRed`Private`a$[[1,0]], 
                   LiteRed`Private`x$[[1,0]]]] /. HoldPattern -> 
                 HoldForm]]) & , Appearance -> "Frameless", 
           BaseStyle -> "InformationLink"]}, {1}]], 5], 
     DefaultBaseStyle -> "InfoGrid"]])
gb1 /: jsOrder[gb1] := {"np", "cp", "-ds", "-ns"}
gb1 /: jSymmetries[gb1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0] := 
  {{j[gb1, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?Positive, (n7_)?NonPositive, (n8_)?NonPositive, 
      (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?NonPositive, 
      (n12_)?NonPositive, (n13_)?NonPositive] :> 
     Expand[j[gb1, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13]]}}
gb1 /: jSymmetries[gb1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0] := 
  {{j[gb1, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?Positive, (n7_)?NonPositive, (n8_)?Positive, 
      (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?NonPositive, 
      (n12_)?NonPositive, (n13_)?NonPositive] :> 
     Expand[j[gb1, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13]]}}
gb1 /: jSymmetries[gb1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0] := 
  {{j[gb1, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?NonPositive, 
      (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?NonPositive, 
      (n12_)?NonPositive, (n13_)?NonPositive] :> 
     Expand[j[gb1, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13]]}}
gb1 /: jSymmetries[gb1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0] := 
  {{j[gb1, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?Positive, (n7_)?Positive, (n8_)?Positive, 
      (n9_)?NonPositive, (n10_)?NonPositive, (n11_)?NonPositive, 
      (n12_)?NonPositive, (n13_)?NonPositive] :> 
     Expand[j[gb1, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13]]}}
gb1 /: LI[gb1] := 
  {-(#10*y2*j[gb1, -1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
        #12, #13]) - #12*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, 
       #10, #11, 1 + #12, #13] - (#1 + #9 - #10 - #12)*y4*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13] + 
     #10*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
       -1 + #12, #13] - #10*t1*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       1 + #10, #11, #12, #13] - #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       1 + #9, #10, #11, -1 + #12, #13] - 
     #1*y2*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13] - #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13] + 2*#1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, -1 + #12, #13] - #1*t1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13] + 
     2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[a, l2] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, 
       -1 + #9, #10, #11, #12, #13]*sp[a, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13]*sp[a, l2] + 2*#6*t1*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[a, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*(sp[a, l2] - sp[b, l2]) + 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, #11, -1 + #12, #13]*sp[b, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13]*sp[b, l2], (#12*y2*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, 
        #9, #10, #11, 1 + #12, #13])/2 + 
     (#9*y4*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, 1 + #9, #10, #11, 
        #12, #13])/2 + (#10*y2*j[gb1, #1, #2, #3, #4, #5, -1 + #6, #7, #8, 
        #9, 1 + #10, #11, #12, #13])/2 - 
     (#10*y2*j[gb1, #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, 1 + #10, #11, 
        #12, #13])/2 - (#12*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, 
        #9, #10, #11, 1 + #12, #13])/2 - 
     (#10*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, 1 + #10, #11, 
        #12, #13])/2 - (#9*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, 
        1 + #9, #10, #11, #12, #13])/2 + #10*y2*j[gb1, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, 1 + #10, #11, #12, -1 + #13] + 
     (#1*y2*j[gb1, 1 + #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
        #12, #13])/2 + (#1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, -1 + #6, #7, #8, 
        #9, #10, #11, #12, #13])/2 - 
     (#1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, 
        #12, #13])/2 - (#1*(y2 + y4)*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, 
        -1 + #8, #9, #10, #11, #12, #13])/2 + 
     #1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13] + #8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, 
       #10, #11, #12, #13]*sp[a, l2] + #6*j[gb1, #1, #2, #3, #4, -1 + #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, #13]*sp[a, l2] - 
     (#6 + #8 - #10 - #12)*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13]*sp[a, l2] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, 
       -1 + #7, #8, #9, #10, #11, #12, #13]*sp[a, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13]*sp[a, l2] + #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, -1 + #12, #13]*sp[a, l2] + 
     #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, #11, -1 + #12, 
       #13]*sp[b, l2] + #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       -1 + #10, #11, #12, #13]*sp[b, l2] + 
     (#12*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
        #13]*sp[l2, l2])/2 + (#9*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
        1 + #9, #10, #11, #12, #13]*sp[l2, l2])/2 + 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, l2] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       -1 + #10, #11, #12, #13]*sp[l2, l2] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, l2] + (#1*y2*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, #12, #13]*sp[l2, l2])/2 + 
     #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13]*
      sp[a, l2]*sp[l2, l2] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[a, l2]*sp[l2, l2] + 
     #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, -1 + #12, 
       #13]*sp[l2, v1] + #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, 
       -1 + #10, #11, #12, #13]*sp[l2, v1] + 
     #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13]*sp[l2, v2] + #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13]*sp[l2, v2], 
    -(#10*y2*j[gb1, #1, #2, -1 + #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
        #12, #13]) - #12*y2*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       -1 + #11, 1 + #12, #13] + #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, 1 + #11, -1 + #12, #13] - 
     #9*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, -1 + #11, #12, 
       #13] + #4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, -1 + #10, 
       #11, #12, #13] + #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, 
       -1 + #10, #11, #12, #13] + #2*y1*j[gb1, #1, 1 + #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, -1 + #12, #13] - 
     #1*y4*j[gb1, 1 + #1, #2, -1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] - #1*y2*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       -1 + #11, #12, #13] + 2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, 
       #8, #9, #10, #11, #12, #13]*sp[a, l2] - 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, -1 + #11, #12, 
       #13]*sp[a, l2] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, -1 + #11, #12, #13]*sp[a, l2] + 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, v1] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       -1 + #10, #11, #12, #13]*sp[l2, v1] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, v1], -(#12*y2*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, 1 + #12, #13]) - #9*y4*j[gb1, #1, -1 + #2, #3, #4, #5, 
       #6, #7, #8, 1 + #9, #10, #11, #12, #13] - 
     #10*y2*j[gb1, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
       #12, #13] + #11*y1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       1 + #11, -1 + #12, #13] + #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, 
       #8, #9, -1 + #10, #11, #12, #13] + 
     #3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13] + #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13] - #1*y2*j[gb1, 1 + #1, -1 + #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, #12, #13] - #1*y4*j[gb1, 1 + #1, #2, #3, -1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13] - 
     2*#8*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13]*sp[a, l2] - 2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[a, l2] + 
     2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[a, l2] + 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, 
       #10, #11, -1 + #12, #13]*sp[l2, v2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, -1 + #10, #11, #12, 
       #13]*sp[l2, v2] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13]*sp[l2, v2], 
    (#12*y4*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
        1 + #12, #13])/2 - (#9*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, 
        1 + #9, #10, #11, #12, #13])/2 + 
     (#10*y4*j[gb1, #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, 1 + #10, #11, 
        #12, #13])/2 - (#10*y4*j[gb1, #1, #2, #3, #4, #5, #6, -1 + #7, #8, 
        #9, 1 + #10, #11, #12, #13])/2 - 
     (#12*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
        1 + #12, #13])/2 - (#10*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
        -1 + #8, #9, 1 + #10, #11, #12, #13])/2 + 
     (#9*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, 1 + #9, #10, #11, #12, 
        #13])/2 + #10*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, 
       #11, #12, -1 + #13] + (#1*y4*j[gb1, 1 + #1, #2, #3, #4, -1 + #5, #6, 
        #7, #8, #9, #10, #11, #12, #13])/2 - 
     (#1*j[gb1, 1 + #1, #2, #3, #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13])/2 + (#1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, -1 + #7, #8, #9, 
        #10, #11, #12, #13])/2 - (#1*(-1 + y4)*j[gb1, 1 + #1, #2, #3, #4, #5, 
        #6, #7, -1 + #8, #9, #10, #11, #12, #13])/2 - 
     #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13] + #10*j[gb1, -1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       1 + #10, #11, #12, #13]*sp[a, l2] + 
     #12*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, #10, #11, 1 + #12, 
       #13]*sp[a, l2] - #10*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       1 + #10, #11, -1 + #12, #13]*sp[a, l2] + 
     #10*t1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, 1 + #10, #11, #12, 
       #13]*sp[a, l2] + #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, 
       -1 + #9, #10, #11, #12, #13]*sp[a, l2] + 
     #8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13]*sp[b, l2] + #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[b, l2] - (-#1 + #6 + #8 - #9)*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[b, l2] + #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, #10, 
       #11, #12, #13]*sp[b, l2] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, 
       #8, #9, #10, #11, #12, -1 + #13]*sp[b, l2] - 
     #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[b, l2] - 2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2] + 
     (#12*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, 1 + #12, 
        #13]*sp[l2, l2])/2 - (#9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 
        1 + #9, #10, #11, #12, #13]*sp[l2, l2])/2 + 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, -1 + #9, #10, #11, #12, 
       #13]*sp[l2, l2] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       -1 + #9, #10, #11, #12, #13]*sp[l2, l2] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, l2] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, #13]*(2*t1 - sp[b, l2])*sp[l2, l2] + 
     #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13]*
      sp[b, l2]*sp[l2, l2] + (#1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, #12, #13]*(2*t1*sp[b, l2] + y4*sp[l2, l2]))/2 + 
     #3*j[gb1, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v1] + #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, 
       #10, 1 + #11, #12, #13]*sp[l2, v1] - 
     #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, v1] + #3*t1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13]*sp[l2, v1] + #4*j[gb1, -1 + #1, #2, #3, 1 + #4, 
       #5, #6, #7, #8, #9, #10, #11, #12, #13]*sp[l2, v2] - 
     #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, v2] + #4*t1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, #13]*sp[l2, v2] + #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, 
       #7, #8, -1 + #9, #10, #11, #12, #13]*sp[l2, v2], 
    #4*y1*j[gb1, -1 + #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] + #3*j[gb1, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13] - #10*y4*j[gb1, #1, #2, -1 + #3, #4, #5, #6, #7, #8, 
       #9, 1 + #10, #11, #12, #13] + #11*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
       #8, -1 + #9, #10, 1 + #11, #12, #13] - 
     #12*y4*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 
       1 + #12, #13] + #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, 
       -1 + #11, #12, #13] - #4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, 
       #9, #10, #11, -1 + #12, #13] + #4*t1*y1*j[gb1, #1, #2, #3, 1 + #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13] - 
     #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13] + #3*t1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       #12, #13] + #2*y1*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, -1 + #9, 
       #10, #11, #12, #13] + #1*j[gb1, 1 + #1, #2, -1 + #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, #13] - #1*y4*j[gb1, 1 + #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, -1 + #11, #12, #13] + 
     2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[b, l2] - 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, 
       #10, -1 + #11, #12, #13]*sp[b, l2] - 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13]*sp[b, l2] - 2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, v1] + 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, -1 + #9, #10, #11, #12, 
       #13]*sp[l2, v1] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       -1 + #9, #10, #11, #12, #13]*sp[l2, v1] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, -1 + #12, 
       #13]*sp[l2, v1] - 2*#6*t1*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, v1], 
    #4*j[gb1, -1 + #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] + #3*y1*j[gb1, -1 + #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13] - #12*y4*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, 1 + #12, #13] + #9*j[gb1, #1, -1 + #2, #3, #4, #5, #6, 
       #7, #8, 1 + #9, #10, #11, #12, #13] - 
     #10*y4*j[gb1, #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, 1 + #10, #11, 
       #12, #13] + #11*y1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, -1 + #9, 
       #10, 1 + #11, #12, #13] - #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, 
       #8, #9, #10, #11, -1 + #12, #13] + 
     #4*t1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] - #3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, #10, #11, 
       -1 + #12, #13] + #3*t1*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, #12, #13] + #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, 
       #8, -1 + #9, #10, #11, #12, #13] - 
     #1*y4*j[gb1, 1 + #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] + #1*j[gb1, 1 + #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13] - 2*#8*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, 
       #9, #10, #11, #12, #13]*sp[b, l2] - 
     2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[b, l2] + 2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[b, l2] - 
     2*#6*j[gb1, -1 + #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v2] + 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, 
       -1 + #9, #10, #11, #12, #13]*sp[l2, v2] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, -1 + #9, #10, #11, #12, 
       #13]*sp[l2, v2] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, -1 + #12, #13]*sp[l2, v2] - 
     2*#6*t1*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v2], -1/2*(#11*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, 
        #9, #10, 1 + #11, #12, #13]) + 
     (#11*j[gb1, #1, #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, 1 + #11, #12, 
        #13])/2 - (#4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, -1 + #6, #7, #8, #9, 
        #10, #11, #12, #13])/2 + (#4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, 
        -1 + #7, #8, #9, #10, #11, #12, #13])/2 + 
     (#4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
        #12, #13])/2 - #4*y1*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, -1 + #13] - (#3*j[gb1, #1, #2, 1 + #3, #4, #5, -1 + #6, 
        #7, #8, #9, #10, #11, #12, #13])/2 + 
     (#3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, -1 + #7, #8, #9, #10, #11, #12, 
        #13])/2 + (#3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, 
        #10, #11, #12, #13])/2 - #3*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, 
       #8, #9, #10, #11, #12, -1 + #13] - 
     (#2*y1*j[gb1, #1, 1 + #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, #11, 
        #12, #13])/2 + (#2*y1*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, -1 + #8, 
        #9, #10, #11, #12, #13])/2 - #10*j[gb1, #1, #2, -1 + #3, #4, #5, #6, 
       #7, #8, #9, 1 + #10, #11, #12, #13]*sp[a, l2] - 
     #12*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, -1 + #11, 1 + #12, 
       #13]*sp[a, l2] - #1*j[gb1, 1 + #1, #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, -1 + #11, #12, #13]*sp[a, l2] - 
     #9*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, 1 + #9, #10, -1 + #11, #12, 
       #13]*sp[b, l2] - #1*j[gb1, 1 + #1, #2, -1 + #3, #4, #5, #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[b, l2] + 
     2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, l2] - (#11*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 
        1 + #11, #12, #13]*sp[l2, l2])/2 - 
     2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, -1 + #11, #12, 
       #13]*sp[l2, l2] - 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, -1 + #11, #12, #13]*sp[l2, l2] - 
     (#2*y1*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
        #13]*sp[l2, l2])/2 - #8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 
       1 + #8, #9, #10, #11, #12, #13]*sp[l2, v1] - 
     #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v1] - (#3 - #6 - #8 + #11)*j[gb1, #1, #2, #3, #4, #5, #6, 
       #7, #8, #9, #10, #11, #12, #13]*sp[l2, v1] - 
     #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v1] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, 
       #10, #11, #12, -1 + #13]*sp[l2, v1] - 
     #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13]*
      sp[l2, l2]*sp[l2, v1] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2]*sp[l2, v1] - 
     #4*j[gb1, #1, #2, -1 + #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v2] - #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, 
       #10, -1 + #11, #12, #13]*sp[l2, v2], 
    -1/2*(#11*y1*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, #8, #9, #10, 
        1 + #11, #12, #13]) + (#11*y1*j[gb1, #1, #2, #3, #4, #5, #6, #7, 
        -1 + #8, #9, #10, 1 + #11, #12, #13])/2 - 
     (#4*j[gb1, #1, #2, #3, 1 + #4, #5, -1 + #6, #7, #8, #9, #10, #11, #12, 
        #13])/2 + (#4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, -1 + #7, #8, #9, 
        #10, #11, #12, #13])/2 + (#4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, 
        -1 + #8, #9, #10, #11, #12, #13])/2 - 
     #4*j[gb1, #1, #2, #3, 1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       -1 + #13] - (#3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, -1 + #6, #7, #8, #9, 
        #10, #11, #12, #13])/2 + (#3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, 
        -1 + #7, #8, #9, #10, #11, #12, #13])/2 + 
     (#3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, 
        #12, #13])/2 - #3*y1*j[gb1, #1, #2, 1 + #3, #4, #5, #6, #7, #8, #9, 
       #10, #11, #12, -1 + #13] - (#2*j[gb1, #1, 1 + #2, #3, #4, -1 + #5, #6, 
        #7, #8, #9, #10, #11, #12, #13])/2 + 
     (#2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, -1 + #8, #9, #10, #11, #12, 
        #13])/2 - #12*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       #11, 1 + #12, #13]*sp[a, l2] - #10*j[gb1, #1, #2, #3, -1 + #4, #5, #6, 
       #7, #8, #9, 1 + #10, #11, #12, #13]*sp[a, l2] - 
     #1*j[gb1, 1 + #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[a, l2] - #9*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, 
       1 + #9, #10, #11, #12, #13]*sp[b, l2] - 
     #1*j[gb1, 1 + #1, #2, #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[b, l2] - 2*#8*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, 1 + #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2] - 
     2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, l2] + 2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2] - 
     (#11*y1*j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
        #13]*sp[l2, l2])/2 - (#2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, 
        #9, #10, #11, #12, #13]*sp[l2, l2])/2 - 
     #11*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
       #13]*sp[l2, v1] - #3*j[gb1, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, v1] - 
     #8*j[gb1, #1, #2, #3, #4, -1 + #5, #6, #7, 1 + #8, #9, #10, #11, #12, 
       #13]*sp[l2, v2] - #6*j[gb1, #1, #2, #3, #4, -1 + #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, v2] - (#2 + #4 - #6 - #8)*
      j[gb1, #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13]*
      sp[l2, v2] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, -1 + #7, #8, #9, 
       #10, #11, #12, #13]*sp[l2, v2] + 2*#6*j[gb1, #1, #2, #3, #4, #5, 
       1 + #6, #7, #8, #9, #10, #11, #12, -1 + #13]*sp[l2, v2] - 
     #8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, #10, #11, #12, #13]*
      sp[l2, l2]*sp[l2, v2] - #6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, l2]*sp[l2, v2], 
    -(#11*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 1 + #11, #12, 
        #13]) + #4*j[gb1, #1, #2, -1 + #3, 1 + #4, #5, #6, #7, #8, #9, #10, 
       #11, #12, #13] - (#2 - #3 + #4 - #11)*y1*j[gb1, #1, #2, #3, #4, #5, 
       #6, #7, #8, #9, #10, #11, #12, #13] - 
     #3*j[gb1, #1, #2, 1 + #3, -1 + #4, #5, #6, #7, #8, #9, #10, #11, #12, 
       #13] + #2*j[gb1, #1, 1 + #2, #3, #4, #5, #6, #7, #8, #9, #10, 
       -1 + #11, #12, #13] - 2*#8*j[gb1, #1, -1 + #2, #3, #4, #5, #6, #7, 
       1 + #8, #9, #10, #11, #12, #13]*sp[l2, v1] - 
     2*#6*j[gb1, #1, -1 + #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v1] + 2*#6*j[gb1, #1, #2, #3, -1 + #4, #5, 1 + #6, #7, #8, 
       #9, #10, #11, #12, #13]*sp[l2, v1] - 
     2*#6*j[gb1, #1, #2, -1 + #3, #4, #5, 1 + #6, #7, #8, #9, #10, #11, #12, 
       #13]*sp[l2, v2] + 2*#8*j[gb1, #1, #2, #3, #4, #5, #6, #7, 1 + #8, #9, 
       #10, -1 + #11, #12, #13]*sp[l2, v2] + 
     2*#6*j[gb1, #1, #2, #3, #4, #5, 1 + #6, #7, #8, #9, #10, -1 + #11, #12, 
       #13]*sp[l2, v2]} & 
gb1 /: LMs[gb1] := {l1, q}
gb1 /: MappedSectors[gb1] := {}
gb1 /: MIs[gb1] := {}
gb1 /: NDs[gb1] := 13
gb1 /: NonZeroSectors[gb1] := {js[gb1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 
    0], js[gb1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]}
gb1 /: Parameters[gb1] := {t1, y1, y2, y4, sp[a, l2], sp[b, l2], sp[l2, l2], 
   sp[l2, v1], sp[l2, v2], d}
gb1 /: PowerShifts[gb1] := {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
gb1 /: SectorsMappings[gb1] := {}
gb1 /: SectorsPattern[gb1] := {_, _, _, _, _, _, _, _, 0, 0, 0, 0, 0}
gb1 /: SimpleSectors[gb1] := {js[gb1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]}
gb1 /: SPs[gb1] := {sp[a, l1], sp[a, q], sp[b, l1], sp[b, q], sp[l1, l1], 
   sp[l1, l2], sp[l1, q], sp[l1, v1], sp[l1, v2], sp[l2, q], sp[q, q], 
   sp[q, v1], sp[q, v2]}
gb1 /: SR[gb1] := Module[{LiteRed`Private`jsc$ = jSector[j[gb1, ##1]]}, 
    If[MemberQ[UniqueSectors[gb1], LiteRed`Private`jsc$], 
     DeleteCases[DeleteDuplicates[Collectj[j[gb1, ##1] - 
         (j[gb1, ##1] /. jSymmetries @@ LiteRed`Private`jsc$)]], 0], {}]] & 
gb1 /: Toj[gb1] := {sp[a, l1] -> j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 
     0], sp[a, q] -> j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0], 
   sp[b, l1] -> j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0], 
   sp[b, q] -> t1 + j[gb1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] - 
     j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0], 
   sp[l1, l1] -> j[gb1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[l1, l2] -> (-j[gb1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0] + 
      j[gb1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0] - sp[l2, l2])/2, 
   sp[l1, q] -> j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1], 
   sp[l1, v1] -> j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0], 
   sp[l1, v2] -> j[gb1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[l2, q] -> (-j[gb1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0] + 
      j[gb1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0] + 
      j[gb1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0] - 
      2*j[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1])/2, 
   sp[q, q] -> j[gb1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0], 
   sp[q, v1] -> j[gb1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   sp[q, v2] -> j[gb1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
gb1 /: UniqueSectors[gb1] := {js[gb1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]}
gb1 /: ZerojRule[gb1] := LiteRed`Private`jjj:j[gb1, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0}, {1, 1, 1, 1, 0, 1, 1, 1, 0, 
         0, 0, 0, 0}, {1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0}, 
        {1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}, {1, 0, 1, 1, 1, 1, 1, 1, 0, 
         0, 0, 0, 0}, {0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}}]
gb1 /: ZeroSectors[gb1] := {js[gb1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 
   js[gb1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 
   js[gb1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0]}
gb1 /: SectorsMappings[gb1, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[gb1], HoldPattern[js[gb1, LiteRed`Private`ns$] -> _]]
gb1::usage = "2-loop basis with 5 external momenta.\nUse Information[gb1] to \
get basis summary.\nThis string can be redefined by setting \
gb1::usage=\"\[Ellipsis]\""; Information[gb1, LongForm -> False]; 
LiteRed`Private`CheckDefs[gb1]
BasisDirectory[gb1]
